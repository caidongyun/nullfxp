# Makefile.in for putty under Unix with Autoconf.
#
# This file was created by `mkfiles.pl' from the `Recipe' file.
# DO NOT EDIT THIS FILE DIRECTLY; edit Recipe or mkfiles.pl instead.
#
# Extra options you can set:
#
#  - VER="-DSNAPSHOT=1999-01-25 -DSVN_REV=1234"
#      Generates executables whose About box report them as being a
#      development snapshot. SVN_REV is a Subversion revision number.
#
#  - VER=-DRELEASE=0.43
#      Generates executables whose About box report them as being a
#      release version.
#
#  - COMPAT=-DAUTO_WINSOCK (Windows only)
#      Causes PuTTY to assume that <windows.h> includes its own WinSock
#      header file, so that it won't try to include <winsock.h>.
#
#  - COMPAT=-DWINSOCK_TWO (Windows only)
#      Causes the PuTTY utilities to include <winsock2.h> instead of
#      <winsock.h>, except Plink which _needs_ WinSock 2 so it already
#      does this.
#
#  - COMPAT=-DNO_SECURITY (Windows only)
#      Disables Pageant's use of <aclapi.h>, which is not available
#      with some development environments (such as older versions of
#      the Cygwin/mingw GNU toolchain). This means that Pageant
#      won't care about the local user ID of processes accessing it; a
#      version of Pageant built with this option will therefore refuse
#      to run under NT-series OSes on security grounds (although it
#      will run fine on Win95-series OSes where there is no access
#      control anyway).
#
#  - COMPAT=-DNO_MULTIMON (Windows only)
#      Disables PuTTY's use of <multimon.h>, which is not available
#      with some development environments. This means that PuTTY's
#      full-screen mode (configurable to work on Alt-Enter) will
#      not behave usefully in a multi-monitor environment.
#
#      Note that this definition is always enabled in the Cygwin
#      build, since at the time of writing this <multimon.h> is
#      known not to be available in Cygwin.
#
#  - COMPAT=-DNO_HTMLHELP (Windows only)
#      Disables PuTTY's use of <htmlhelp.h>, which is not available
#      with some development environments. The resulting binary
#      will only look for an old-style WinHelp file (.HLP/.CNT), and
#      will ignore any .CHM file.
#
#      Note that this definition is always enabled in the Cygwin
#      build, since at the time of writing this <htmlhelp.h> is
#      known not to be available in Cygwin (although you can use
#      the htmlhelp.h supplied with HTML Help Workshop).
#
#  - RCFL=-DNO_MANIFESTS (Windows only)
#      Disables inclusion of XML application manifests in the PuTTY
#      binaries. This may be necessary to build for 64-bit Windows;
#      the manifests are only included to use the XP GUI style on
#      Windows XP, and the architecture tags are a lie on 64-bit.
#
#  - COMPAT=-DNO_IPV6
#      Disables PuTTY's ability to make IPv6 connections, enabling
#      it to compile under development environments which do not
#      support IPv6 in their header files.
#
#  - COMPAT=-DMSVC4 (Windows only)
#  - RCFL=-DMSVC4
#      Makes a couple of minor changes so that PuTTY compiles using
#      MSVC 4. You will also need -DNO_SECURITY and -DNO_MULTIMON.
#
#  - RCFL=-DASCIICTLS (Windows only)
#      Uses ASCII rather than Unicode to specify the tab control in
#      the resource file. Probably most useful when compiling with
#      Cygnus/mingw32, whose resource compiler may have less of a
#      problem with it.
#
#  - XFLAGS=-DTELNET_DEFAULT
#      Causes PuTTY to default to the Telnet protocol (in the absence
#      of Default Settings and so on to the contrary). Normally PuTTY
#      will default to SSH.
#
#  - XFLAGS=-DDEBUG
#      Causes PuTTY to enable internal debugging.
#
#  - XFLAGS=-DMALLOC_LOG
#      Causes PuTTY to emit a file called putty_mem.log, logging every
#      memory allocation and free, so you can track memory leaks.
#
#  - XFLAGS=-DMINEFIELD (Windows only)
#      Causes PuTTY to use a custom memory allocator, similar in
#      concept to Electric Fence, in place of regular malloc(). Wastes
#      huge amounts of RAM, but should cause heap-corruption bugs to
#      show up as GPFs at the point of failure rather than appearing
#      later on as second-level damage.
#

CC = gcc

CFLAGS = -g -O2 -Wall -Werror  -DHAVE_CONFIG_H  -I./ -I./charset/ \
		-I./windows/ -I./unix/ -I./mac/ -I./macosx/
XLDFLAGS =  
ULDFLAGS = -lgssapi_krb5 
INSTALL=/usr/bin/install -c
INSTALL_PROGRAM=$(INSTALL)
INSTALL_DATA=$(INSTALL)
prefix=/usr/local
exec_prefix=${prefix}
bindir=${exec_prefix}/bin
mandir=${prefix}/share/man
man1dir=$(mandir)/man1


.SUFFIXES: .c .h


all: plink pscp
#pscp psftp puttygen
#all-gtk: pterm putty puttytel

plink: be_all_s.o cmdline.o cproxy.o ldisc.o logging.o misc.o pinger.o \
		portfwd.o proxy.o raw.o rlogin.o settings.o ssh.o sshaes.o \
		ssharcf.o sshblowf.o sshbn.o sshcrc.o sshcrcda.o sshdes.o \
		sshdh.o sshdss.o sshmd5.o sshpubk.o sshrand.o sshrsa.o \
		sshsh256.o sshsh512.o sshsha.o sshzlib.o telnet.o time.o \
		timing.o tree234.o uxgss.o ux_x11.o uxagentc.o uxcons.o uxmisc.o \
		uxnet.o uxnoise.o uxplink.o uxproxy.o uxsel.o uxser.o \
		uxsignal.o uxstore.o version.o wildcard.o x11fwd.o
	$(CC) -o $@ be_all_s.o cmdline.o cproxy.o ldisc.o logging.o misc.o \
		pinger.o portfwd.o proxy.o raw.o rlogin.o settings.o ssh.o \
		sshaes.o ssharcf.o sshblowf.o sshbn.o sshcrc.o sshcrcda.o \
		sshdes.o sshdh.o sshdss.o sshmd5.o sshpubk.o sshrand.o \
		sshrsa.o sshsh256.o sshsh512.o sshsha.o sshzlib.o telnet.o \
		time.o timing.o tree234.o uxgss.o ux_x11.o uxagentc.o uxcons.o \
		uxmisc.o uxnet.o uxnoise.o uxplink.o uxproxy.o uxsel.o \
		uxser.o uxsignal.o uxstore.o version.o wildcard.o x11fwd.o \
		$(ULDFLAGS) 

pscp: be_none.o cmdline.o cproxy.o int64.o logging.o misc.o pinger.o \
		portfwd.o proxy.o pscp.o settings.o sftp.o ssh.o sshaes.o \
		ssharcf.o sshblowf.o sshbn.o sshcrc.o sshcrcda.o sshdes.o \
		sshdh.o sshdss.o sshmd5.o sshpubk.o sshrand.o sshrsa.o \
		sshsh256.o sshsh512.o sshsha.o sshzlib.o time.o timing.o \
		tree234.o uxgss.o uxagentc.o uxcons.o uxmisc.o uxnet.o uxnoise.o \
		uxproxy.o uxsel.o uxsftp.o uxstore.o version.o wildcard.o \
		x11fwd.o
	$(CC) -o $@ be_none.o cmdline.o cproxy.o int64.o logging.o misc.o \
		pinger.o portfwd.o proxy.o pscp.o settings.o sftp.o ssh.o \
		sshaes.o ssharcf.o sshblowf.o sshbn.o sshcrc.o sshcrcda.o \
		sshdes.o sshdh.o sshdss.o sshmd5.o sshpubk.o sshrand.o \
		sshrsa.o sshsh256.o sshsh512.o sshsha.o sshzlib.o time.o \
		timing.o tree234.o uxgss.o uxagentc.o uxcons.o uxmisc.o uxnet.o \
		uxnoise.o uxproxy.o uxsel.o uxsftp.o uxstore.o version.o \
		wildcard.o x11fwd.o $(ULDFLAGS) 

version.o: FORCE
	if test -z "$(VER)" && (cd .; md5sum -c manifest); then \
		$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) `cat ./version.def` -c ./version.c; \
	else \
		$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c ./version.c; \
	fi

.c.o:
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^
uxgss.o: unix/uxgss.c
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^
ux_x11.o: unix/ux_x11.c
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^
uxagentc.o: unix/uxagentc.c
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^
uxcons.o: unix/uxcons.c
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^
uxmisc.o: unix/uxmisc.c
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^
uxnet.o: unix/uxnet.c
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^
uxnoise.o: unix/uxnoise.c
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^
uxplink.o: unix/uxplink.c
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^
uxproxy.o: unix/uxproxy.c
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^
uxsel.o: unix/uxsel.c
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^
uxser.o: unix/uxser.c
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^
uxsignal.o: unix/uxsignal.c
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^
uxstore.o: unix/uxstore.c
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^
uxsftp.o: unix/uxsftp.c
	$(CC) $(COMPAT) $(XFLAGS) $(CFLAGS) $(VER) -c $^

install:
	$(INSTALL_PROGRAM) -m 755 plink $(DESTDIR)$(bindir)/plink
	$(INSTALL_PROGRAM) -m 755 pscp $(DESTDIR)$(bindir)/pscp
	$(INSTALL_PROGRAM) -m 755 psftp $(DESTDIR)$(bindir)/psftp
	$(INSTALL_PROGRAM) -m 755 pterm $(DESTDIR)$(bindir)/pterm
	if test -n "$(UTMP_GROUP)"; then \
	  chgrp $(UTMP_GROUP) $(DESTDIR)$(bindir)/pterm && \
	    chmod 2755 $(DESTDIR)$(bindir)/pterm; \
	elif test -n "$(UTMP_USER)"; then \
	  chown $(UTMP_USER) $(DESTDIR)$(bindir)/pterm && \
	    chmod 4755 $(DESTDIR)$(bindir)/pterm; \
	fi
	$(INSTALL_PROGRAM) -m 755 putty $(DESTDIR)$(bindir)/putty
	$(INSTALL_PROGRAM) -m 755 puttygen $(DESTDIR)$(bindir)/puttygen
	$(INSTALL_PROGRAM) -m 755 puttytel $(DESTDIR)$(bindir)/puttytel
	$(INSTALL_DATA) -m 644 ../doc/plink.1 $(DESTDIR)$(man1dir)/plink.1
	$(INSTALL_DATA) -m 644 ../doc/pscp.1 $(DESTDIR)$(man1dir)/pscp.1
	$(INSTALL_DATA) -m 644 ../doc/psftp.1 $(DESTDIR)$(man1dir)/psftp.1
	$(INSTALL_DATA) -m 644 ../doc/pterm.1 $(DESTDIR)$(man1dir)/pterm.1
	$(INSTALL_DATA) -m 644 ../doc/putty.1 $(DESTDIR)$(man1dir)/putty.1
	$(INSTALL_DATA) -m 644 ../doc/puttygen.1 $(DESTDIR)$(man1dir)/puttygen.1
	$(INSTALL_DATA) -m 644 ../doc/puttytel.1 $(DESTDIR)$(man1dir)/puttytel.1

install-strip:
	$(MAKE) install INSTALL_PROGRAM="$(INSTALL_PROGRAM) -s"

clean:
	rm -fv *.o plink pscp psftp pterm putty puttygen puttytel

FORCE:
